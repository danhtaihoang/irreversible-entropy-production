%!PS-Adobe-2.0 EPSF-2.0
%%Title: P050_fitting.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Sun Apr 19 07:26:37 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (P050_fitting.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (tai)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Apr 19 07:26:37 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
1.000 UL
LTb
LCb setrgbcolor
1098 576 M
63 0 V
5714 0 R
-63 0 V
stroke
990 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 1001 M
63 0 V
5714 0 R
-63 0 V
stroke
990 1001 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.005)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 1425 M
63 0 V
5714 0 R
-63 0 V
stroke
990 1425 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.01)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 1850 M
63 0 V
5714 0 R
-63 0 V
stroke
990 1850 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.015)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 2275 M
63 0 V
5714 0 R
-63 0 V
stroke
990 2275 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.02)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 2700 M
63 0 V
5714 0 R
-63 0 V
stroke
990 2700 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.025)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 3124 M
63 0 V
5714 0 R
-63 0 V
stroke
990 3124 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.03)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 3549 M
63 0 V
5714 0 R
-63 0 V
stroke
990 3549 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.035)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 3974 M
63 0 V
5714 0 R
-63 0 V
stroke
990 3974 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.04)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 4398 M
63 0 V
5714 0 R
-63 0 V
stroke
990 4398 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.045)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 4823 M
63 0 V
5714 0 R
-63 0 V
stroke
990 4823 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.05)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1098 576 M
0 63 V
0 4184 R
0 -63 V
stroke
1098 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.78)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1623 576 M
0 63 V
0 4184 R
0 -63 V
stroke
1623 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.8)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2148 576 M
0 63 V
0 4184 R
0 -63 V
stroke
2148 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.82)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2674 576 M
0 63 V
0 4184 R
0 -63 V
stroke
2674 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.84)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3199 576 M
0 63 V
0 4184 R
0 -63 V
stroke
3199 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.86)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3724 576 M
0 63 V
0 4184 R
0 -63 V
stroke
3724 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.88)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4249 576 M
0 63 V
0 4184 R
0 -63 V
stroke
4249 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.9)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4774 576 M
0 63 V
0 4184 R
0 -63 V
stroke
4774 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.92)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5299 576 M
0 63 V
0 4184 R
0 -63 V
stroke
5299 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.94)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5825 576 M
0 63 V
0 4184 R
0 -63 V
stroke
5825 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.96)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6350 576 M
0 63 V
0 4184 R
0 -63 V
stroke
6350 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.98)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6875 576 M
0 63 V
0 4184 R
0 -63 V
stroke
6875 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1098 4823 N
0 -4247 V
5777 0 V
0 4247 V
-5777 0 V
Z stroke
LCb setrgbcolor
144 2699 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (P)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
3986 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (S)]
] -60.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LT0
0.75 0.75 0.75 C 1615 576 CircleF
1641 576 CircleF
1667 576 CircleF
1694 576 CircleF
1720 576 CircleF
1746 576 CircleF
1772 576 CircleF
1799 576 CircleF
1825 576 CircleF
1851 576 CircleF
1877 576 CircleF
1904 576 CircleF
1930 576 CircleF
1956 576 CircleF
1982 576 CircleF
2009 576 CircleF
2035 576 CircleF
2061 576 CircleF
2087 576 CircleF
2114 576 CircleF
2140 576 CircleF
2166 576 CircleF
2192 576 CircleF
2219 576 CircleF
2245 576 CircleF
2271 576 CircleF
2297 576 CircleF
2323 576 CircleF
2350 576 CircleF
2376 576 CircleF
2402 576 CircleF
2428 576 CircleF
2455 576 CircleF
2481 576 CircleF
2507 576 CircleF
2533 576 CircleF
2560 576 CircleF
2586 576 CircleF
2612 576 CircleF
2638 576 CircleF
2665 576 CircleF
2691 576 CircleF
2717 576 CircleF
2743 576 CircleF
2770 576 CircleF
2796 576 CircleF
2822 576 CircleF
2848 576 CircleF
2875 576 CircleF
2901 576 CircleF
2927 576 CircleF
2953 576 CircleF
2980 576 CircleF
3006 576 CircleF
3032 576 CircleF
3058 576 CircleF
3085 576 CircleF
3111 576 CircleF
3137 576 CircleF
3163 576 CircleF
3190 576 CircleF
3216 576 CircleF
3242 576 CircleF
3268 577 CircleF
3295 577 CircleF
3321 577 CircleF
3347 577 CircleF
3373 577 CircleF
3400 578 CircleF
3426 578 CircleF
3452 578 CircleF
3478 578 CircleF
3505 581 CircleF
3531 581 CircleF
3557 583 CircleF
3583 584 CircleF
3610 587 CircleF
3636 590 CircleF
3662 594 CircleF
3688 598 CircleF
3715 602 CircleF
3741 612 CircleF
3767 617 CircleF
3793 631 CircleF
3820 642 CircleF
3846 659 CircleF
3872 678 CircleF
3898 706 CircleF
3925 739 CircleF
3951 771 CircleF
3977 816 CircleF
4003 867 CircleF
4030 932 CircleF
4056 1015 CircleF
4082 1102 CircleF
4108 1212 CircleF
4135 1332 CircleF
4161 1471 CircleF
4187 1621 CircleF
4213 1785 CircleF
4240 1980 CircleF
4266 2194 CircleF
4292 2428 CircleF
4318 2669 CircleF
4345 2914 CircleF
4371 3169 CircleF
4397 3417 CircleF
4423 3672 CircleF
4450 3903 CircleF
4476 4097 CircleF
4502 4280 CircleF
4528 4424 CircleF
4555 4497 CircleF
4581 4552 CircleF
4607 4519 CircleF
4633 4444 CircleF
4660 4316 CircleF
4686 4156 CircleF
4712 3920 CircleF
4738 3633 CircleF
4765 3347 CircleF
4791 3031 CircleF
4817 2728 CircleF
4843 2405 CircleF
4870 2109 CircleF
4896 1832 CircleF
4922 1584 CircleF
4948 1369 CircleF
4975 1184 CircleF
5001 1030 CircleF
5027 907 CircleF
5053 813 CircleF
5080 739 CircleF
5106 685 CircleF
5132 648 CircleF
5158 624 CircleF
5185 605 CircleF
5211 592 CircleF
5237 586 CircleF
5263 581 CircleF
5290 579 CircleF
5316 577 CircleF
5342 576 CircleF
5368 576 CircleF
5395 576 CircleF
5421 576 CircleF
5447 576 CircleF
5473 576 CircleF
5500 576 CircleF
5526 576 CircleF
5552 576 CircleF
5578 576 CircleF
5605 576 CircleF
5631 576 CircleF
5657 576 CircleF
5683 576 CircleF
5710 576 CircleF
5736 576 CircleF
5762 576 CircleF
5788 576 CircleF
5815 576 CircleF
5841 576 CircleF
5867 576 CircleF
5893 576 CircleF
5920 576 CircleF
5946 576 CircleF
5972 576 CircleF
5998 576 CircleF
6025 576 CircleF
6051 576 CircleF
6077 576 CircleF
6103 576 CircleF
6130 576 CircleF
6156 576 CircleF
6182 576 CircleF
6208 576 CircleF
6235 576 CircleF
6261 576 CircleF
6287 576 CircleF
6313 576 CircleF
6340 576 CircleF
6366 576 CircleF
6392 576 CircleF
6418 576 CircleF
6445 576 CircleF
6471 576 CircleF
6497 576 CircleF
6523 576 CircleF
6550 576 CircleF
6576 576 CircleF
6602 576 CircleF
6628 576 CircleF
6655 576 CircleF
6681 576 CircleF
6707 576 CircleF
6733 576 CircleF
6760 576 CircleF
6786 576 CircleF
6812 576 CircleF
6838 576 CircleF
6865 576 CircleF
% End plot #1
% Begin plot #2
3.000 UL
LT0
0.00 0.00 0.00 C /Helvetica findfont 180 scalefont setfont
LCb setrgbcolor
6056 4670 M
(0.0465807*exp\(-6948.14*\(x-0.912635\)**2\)) Rshow
LT0
0.00 0.00 0.00 C 6164 4670 M
495 0 V
1615 576 M
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 1 V
53 2 V
53 4 V
53 9 V
53 19 V
53 35 V
53 64 V
53 107 V
53 171 V
53 253 V
53 348 V
53 445 V
53 526 V
53 567 V
53 549 V
53 458 V
53 302 V
53 96 V
53 -125 V
53 -325 V
53 -474 V
53 -555 V
53 -564 V
53 -518 V
54 -433 V
53 -335 V
53 -241 V
53 -162 V
53 -101 V
53 -59 V
53 -33 V
53 -16 V
53 -9 V
53 -3 V
53 -2 V
53 -1 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
% End plot #2
stroke
1.000 UL
LTb
LCb setrgbcolor
1098 4823 N
0 -4247 V
5777 0 V
0 4247 V
-5777 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
